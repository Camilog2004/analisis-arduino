---
title: "Proyecto Arduino"
author: "Juan Camilo Gutiérrez,
        Maria Fernanda Calle,
        Jaider Castañeda"
date: last-modified
format: 
  pdf:
    toc: true
editor: visual
execute:
  echo: false
  warning: false
---

# Datos

Se realizaron cuatro mediciones de datos, cada una identificada con un nombre específico:

-   **trayecto_mafe**: corresponde a un recorrido desde la Facultad de Minas hasta el municipio de Barbosa, en el cual se utilizó una combinación de medios de transporte: caminata, bus de la línea O del metro, metro y bus intermunicipal.

-   **comparacion_camilo** y **comparacion_jaider**: ambos archivos registran el trayecto desde el Campus Volador hasta la Facultad de Minas, tomados con dos celulares diferentes para efectos comparativos.

-   **trayecto_cicla**: corresponde a un recorrido en bicicleta desde el Campus Volador hasta la estación Estadio.

```{r}
#Lectura de datos
comparacion_camilo <- read.csv("comparacion-camilo.csv")
comparacion_jaider <- read.csv("comparacion-jaider.csv")
trayecto_mafe <- read.csv("trayecto-mafe.csv")
trayecto_cicla <- read.csv("cicla-jaider.csv")

```

# Propuestas para identificar patrones

-   **Análisis de la varianza o desviación estándar**\
    Se puede calcular la varianza o la desviación estándar de las aceleraciones en cada eje. Por ejemplo, la bicicleta puede tener una aceleración más variable debido a vibraciones constantes, mientras que el metro podría tener una aceleración más estable durante el trayecto.

Vamos por ejemplo a tomar los datos de trayecto_mafe para separar

-   **Frecuencia de los picos de aceleración**\
    Contar cuántos "picos" (aceleraciones abruptas) hay en cierto intervalo de tiempo. Por ejemplo, en un autobús podrían haber más frenadas y aceleraciones bruscas que en el metro.

-   **Ventanas de tiempo y características estadísticas**\
    Dividir los datos en ventanas de tiempo (por ejemplo, de 5 segundos) y calcular características estadísticas dentro de cada ventana: media, mediana, máximos, mínimos, etc. Luego, comparar estas estadísticas entre archivos.

-   **Magnitud de aceleración total**\
    Calcular la magnitud total de aceleración con la fórmula: `√(AccX² + AccY² + AccZ²)` y analizar cómo varía con el tiempo. Esto puede dar una idea del nivel de movimiento general en cada transporte.

-   **Uso de patrones de aceleración lineal**\
    La aceleración lineal suele eliminar la componente de la gravedad, lo que permite identificar movimientos del transporte sin interferencia. Esto puede usarse para identificar frenadas o aceleraciones específicas.

-   **Gráficas visuales y reconocimiento visual de patrones**\
    Graficar las aceleraciones para cada medio de transporte y observar diferencias visuales en las formas de las curvas.

# Analisis descriptivo y exploratorio

```{r echo=FALSE}
#| label: Grafico1
#| message: false
#| warning: false
#| paged-print: false
library(tidyverse)
library(gridExtra)

library(patchwork)

```

```{r}
# Timestamp a grupo_tiempo
comparacion_camilo <- comparacion_camilo |> 
  mutate(grupo_tiempo = as.POSIXct(timestamp / 1000),
         AccT = sqrt(AccX^2 + AccY^2 + AccZ^2))

comparacion_jaider <- comparacion_jaider |> 
  mutate(
    grupo_tiempo = as.POSIXct(timestamp / 1000),
    AccT = sqrt(AccX^2 + AccY^2 + AccZ^2)
  )

trayecto_mafe <- trayecto_mafe |> 
  mutate(grupo_tiempo = as.POSIXct(timestamp / 1000),
         AccT = sqrt(AccX^2 + AccY^2 + AccZ^2))

trayecto_cicla <- trayecto_cicla |> 
  mutate(grupo_tiempo = as.POSIXct(timestamp / 1000),
         AccT = sqrt(AccX^2 + AccY^2 + AccZ^2))

```

```{r}
#Agrupar tiempos en intervalos de 100 ms
procesar_datos <- function(df) {
  df %>%
    mutate(
      grupo_tiempo = as.POSIXct(timestamp / 1000, origin = "1970-01-01"),
      grupo_tiempo = as.POSIXct(floor(as.numeric(grupo_tiempo) * 10) / 10, origin = "1970-01-01"),
      AccT = sqrt(AccX^2 + AccY^2 + AccZ^2)
    ) %>%
    group_by(grupo_tiempo) %>%
    summarize(
      AccX = mean(AccX, na.rm = TRUE),
      AccY = mean(AccY, na.rm = TRUE),
      AccZ = mean(AccZ, na.rm = TRUE),
      AccT = mean(AccT, na.rm = TRUE),
      .groups = "drop"
    )
}

comparacion_camilo <- procesar_datos(comparacion_camilo)
comparacion_jaider <- procesar_datos(comparacion_jaider)
trayecto_mafe <- procesar_datos(trayecto_mafe)
trayecto_cicla <- procesar_datos(trayecto_cicla)
```

```{r}
ggplot(comparacion_camilo, aes(grupo_tiempo, AccX)) +
  geom_point(alpha = 0.3)+coord_cartesian(ylim = c(-10, 20))
```

## Graficos descriptivos mismo trayecto

## Telefono 1

```{r}
gx <- ggplot(comparacion_jaider, aes(grupo_tiempo, AccX)) +
  geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20))
gy <- ggplot(comparacion_jaider, aes(grupo_tiempo, AccY)) +
  geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20))
gz <- ggplot(comparacion_jaider, aes(grupo_tiempo, AccZ)) +
  geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20))

gt <- ggplot(comparacion_jaider, aes(grupo_tiempo, AccT)) +
  geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(0, 20))
```

```{r}
((gx | gy) /( gz | gt))

```

### Telefono 2

```{r}
gx <- ggplot(comparacion_camilo, aes(grupo_tiempo, AccX)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gy <- ggplot(comparacion_camilo, aes(grupo_tiempo, AccY)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gz <- ggplot(comparacion_camilo, aes(grupo_tiempo, AccZ)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gt <- ggplot(comparacion_camilo, aes(grupo_tiempo, AccT)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(0, 20))
```

```{r}
((gx | gy) /( gz | gt)) 
```

## Grafico individual 2 formas de movimiento

```{r}
gx <- ggplot(trayecto_cicla, aes(grupo_tiempo, AccX)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gy <- ggplot(trayecto_cicla, aes(grupo_tiempo, AccY)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gz <- ggplot(trayecto_cicla, aes(grupo_tiempo, AccZ)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20)) 

gt <- ggplot(trayecto_cicla, aes(grupo_tiempo, AccT)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(0, 20))
```

```{r}
((gx | gy) /( gz | gt)) 
```

## Varios medios de transporte

```{r}
gx <- ggplot(trayecto_mafe, aes(grupo_tiempo, AccX)) +
  geom_line(alpha = 0.3) +
  coord_cartesian(ylim = c(-10, 20))

gy <- ggplot(trayecto_mafe, aes(grupo_tiempo, AccY)) +
  geom_line(alpha = 0.3) +
  coord_cartesian(ylim = c(-10, 20))

gz <- ggplot(trayecto_mafe, aes(grupo_tiempo, AccZ)) +
  geom_line(alpha = 0.3) +
  coord_cartesian(ylim = c(-10, 20))

gt <- ggplot(trayecto_mafe, aes(grupo_tiempo, AccT)) +
  geom_line(alpha = 0.3) +
  coord_cartesian(ylim = c(0, 20))

```

```{r}

((gx | gy) /( gz | gt)) 
```
```{r}
n_camilo <- nrow(comparacion_camilo)
n_jaider <- nrow(comparacion_jaider)
```

# Patrones observados en datos tomados al mismo tiempo

En el trayecto se registro datos desde la sede volador hasta la sede minas, 
tomando el medio de transporte intercampus de la universidad, y el tiempo
para asistir a clase de 10:00 AM en minas (caminando, y tomando el ascensor), 
con dos celulares distintos.

Vamos a ver el total de observaciones luego de la agrupación por tiempo de los
datos.

Para el teléfono 1 se tienen:

```{r}
n_jaider
```

Para el teléfono 2 se tienen:

```{r}
n_camilo
```
 Lo primero que podemos ver es que el télefono 1 tomó más datos en la misma 
 cantidad de tiempo comparado con el télefono 2.
 
 Ahora vamos a comparar las dos gráficas:
 
```{r}
gx1 <- ggplot(comparacion_jaider, aes(grupo_tiempo, AccX)) +
  geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20))
```
 
```{r}
gx2 <- ggplot(comparacion_camilo, aes(grupo_tiempo, AccX)) +   geom_point(alpha = 0.3, size = 0.5)+coord_cartesian(ylim = c(-10, 20))
```

 
```{r}
(gx1 | gx2)
```
 Como se puede ver, los valores no son muy idénticos, pero se pueden ver
 algunos intervalos de segmentación y van a ser tres:
 
 - Desde el inicio hasta las 10:00 am
 - Desde las 10:00 am hasta las 10:15.
 - Desde las 10:15 am hasta el final.
 
```{r}
comparacion_camilo_mod <- comparacion_camilo %>%
  mutate(hora = hour(grupo_tiempo) + minute(grupo_tiempo) / 60)

comparacion_jaider_mod <- comparacion_jaider %>%
  mutate(hora = hour(grupo_tiempo) + minute(grupo_tiempo) / 60)
```
 
```{r}
# Segmentos para CAMILO
camilo_antes_10 <- comparacion_camilo_mod %>% filter(hora < 10)
camilo_10_a_1015 <- comparacion_camilo_mod %>% filter(hora >= 10 & hora < 10.25)
camilo_despues_1015 <- comparacion_camilo_mod %>% filter(hora >= 10.25)

# Segmentos para JAIDER
jaider_antes_10 <- comparacion_jaider_mod %>% filter(hora < 10)
jaider_10_a_1015 <- comparacion_jaider_mod %>% filter(hora >= 10 & hora < 10.25)
jaider_despues_1015 <- comparacion_jaider_mod %>% filter(hora >= 10.25)

```
 
Para el teléfono 1:
 
```{r}
# JAIDER
summary(jaider_antes_10$AccX)
summary(jaider_10_a_1015$AccX)
summary(jaider_despues_1015$AccX)
```

Para el trayecto 1 la media es de 2.595 en el eje x.
Para el trayecto 2 la media es de 0.026 en el eje x.
Para el trayecto 3 la media es de -0.00918 en el eje x.


Para el teléfono 2:

```{r}
# CAMILO
summary(camilo_antes_10$AccX)
summary(camilo_10_a_1015$AccX)
summary(camilo_despues_1015$AccX)
```

Para el trayecto 1 la media es de 0.3018 en el eje x.
Para el trayecto 2 la media es de 0.0323 en el eje x.
Para el trayecto 3 la media es de -0.6257 en el eje x.


Comparando se observa que los valores no son iguales en los dos teléfonos, pero
si la tendencia se comporta muy similar, casualmente el primer tramo es el 
trayecto en bus de intercampus, y es donde se obtiene el valor máximo, además
el valor máximo más pequeño se obtiene en último trayecto que coincide
con el momento en que los dos estudiantes estaban sentados ya en clase.